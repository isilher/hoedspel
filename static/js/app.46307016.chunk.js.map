{"version":3,"sources":["constants/Colors.ts","components/Themed.tsx","components/Alert.tsx","providers/Auth0Provider.tsx","providers/ApolloProvider.tsx","components/Divider.tsx","screens/LobbyScreen.tsx","providers/GameProvider.tsx","screens/GameScreen.tsx","screens/TurnScreen.tsx","App.tsx","hooks/useCachedResources.ts","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","Button","onPress","title","disabled","TouchableOpacity","undefined","width","padding","borderWidth","borderColor","alignItems","justifyContent","fontWeight","Alert","Platform","OS","alert","description","options","result","window","confirm","filter","Boolean","join","confirmOption","find","cancelOption","RNAlert","useProxy","select","web","default","redirectUri","AuthSession","path","WebBrowser","Auth0Context","React","token","name","auth0Id","isAuthorized","Auth0Provider","children","setName","setToken","setAuth0Id","setIsAuthorized","clientId","responseType","scopes","extraParams","nonce","authorizationEndpoint","request","promptAsync","error","state","type","jwtToken","params","id_token","receivedToken","a","async","AsyncStorage","setItem","console","log","decoded","jwtDecode","nickname","sub","getItem","value","getToken","styles","container","Provider","buttonContainer","marginBottom","fontSize","StyleSheet","create","flex","height","AuthorizedApolloProvider","useContext","client","userId","link","HttpLink","uri","headers","Authorization","ApolloClient","cache","InMemoryCache","createApolloClient","Divider","separator","marginVertical","GET_OPEN_GAMES","gql","CREATE_NEW_GAME","JOIN_GAME","GameListItem","game","useMutation","refetchQueries","joinGame","gameListItem","players","map","player","variables","id","LobbyScreen","newGameName","setNewGameName","useQuery","pollInterval","loading","data","onCompleted","insert_games","returning","createGame","openGames","games","ActivityIndicator","FlatList","flatList","renderItem","item","keyExtractor","toString","row","TextInput","textInput","placeholder","onChangeText","paddingVertical","paddingHorizontal","Dimensions","get","flexDirection","marginRight","playButton","GameContext","createContext","hosting","myTurn","GET_MY_GAME","GameProvider","users","host_id","active_player","auth0_id","LEAVE_GAME","DESTROY_GAME","START_GAME","CREATE_NAME","FREEZE_NAMES","TAKE_TURN","RESET_ROUND","GameScreen","leaveGame","destroyGame","startGame","freezeNames","createName","takeTurn","resetRound","useState","newName","setNewName","nameContribution","setNameContribution","started","score","claimed_names","claimedName","game_id","length","key","nameCountingTitle","names","names_frozen","previousContribution","END_TURN","CLAIM_NAME","TurnScreen","randomAvailableName","setRandomAvailableName","endTurn","claimName","useEffect","sample","randomName","AppContent","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","Ionicons","font","require","warn","useCachedResources","StatusBar","navigator","addEventListener","serviceWorker","register","scope","then","info","catch","module","exports"],"mappings":"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","file":"static/js/app.46307016.chunk.js","sourcesContent":["const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView, TouchableOpacity } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = 'light'; // useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n\nexport function Button({ color = \"#BA7CC6\", onPress, title, disabled }) {\n  return (\n      <TouchableOpacity onPress={disabled ? undefined : onPress}>\n        <View style={{ backgroundColor: color, width: '100%', padding: 10, borderWidth: 1, borderColor: '#333', alignItems: 'center', justifyContent: 'center' }}>\n          <Text style={{ color: 'white', fontWeight: 'bold'}}>{title}</Text>\n        </View>\n      </TouchableOpacity>\n  )\n}\n","import { Alert as RNAlert, Platform } from 'react-native'\n\nconst alertPolyfill = (title, description = '', options = [], extra = undefined) => {\n  const result = window.confirm([title, description].filter(Boolean).join('\\n'))\n\n  if (result) {\n    const confirmOption = options.find(({ style }) => style !== 'cancel')\n    confirmOption?.onPress && confirmOption.onPress()\n  } else {\n    const cancelOption = options.find(({ style }) => style === 'cancel')\n    cancelOption?.onPress && cancelOption.onPress()\n  }\n}\n\nexport const Alert = Platform.OS === 'web' ? { alert: alertPolyfill } : RNAlert\n","import * as AuthSession from \"expo-auth-session\";\nimport jwtDecode from \"jwt-decode\";\nimport * as React from \"react\";\nimport { Platform, StyleSheet } from \"react-native\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { Text, View, Button } from \"../components/Themed\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { Alert } from '../components/Alert'\n\nconst auth0ClientId = \"Gj9Y0KJGtJNCm1SZrUqRODvIc84dwrAY\";\nconst authorizationEndpoint = \"https://dev-5hh3kz1x.eu.auth0.com/authorize\";\n\nconst useProxy = Platform.select({ web: false, default: true });\nlet redirectUri = AuthSession.makeRedirectUri({ useProxy, path: 'hoedspel' });\n// if (redirectUri === \"https://isilher.github.io\") {\n//   redirectUri = \"https://isilher.github.io/hoedspel\";\n// }\n\nWebBrowser.maybeCompleteAuthSession();\n\n// const nonce = (Date.now() * Math.random()).toString();\n\nexport interface IAuth0Context {\n  token: string;\n  name: string;\n  auth0Id: string;\n  isAuthorized: boolean;\n}\n\nexport const Auth0Context = React.createContext<IAuth0Context>({\n  token: \"\",\n  name: \"\",\n  auth0Id: \"\",\n  isAuthorized: false,\n});\n\nexport const Auth0Provider: React.FC = ({ children }) => {\n  const [name, setName] = React.useState('');\n  const [token, setToken] = React.useState('');\n  const [auth0Id, setAuth0Id] = React.useState('');\n  const [isAuthorized, setIsAuthorized] = React.useState(false)\n\n\n  const storeToken = async (receivedToken: string) => {\n    try {\n      await AsyncStorage.setItem(\"@token\", receivedToken);\n    } catch (e) {\n      console.log(\"could not save token\");\n    }\n  };\n\n  const getToken = async () => {\n    try {\n      const value = await AsyncStorage.getItem(\"@token\");\n      if (value !== null) {\n        const decoded = jwtDecode(value);\n        // @ts-expect-error\n        const { nickname, sub } = decoded;\n        setName(nickname);\n        setToken(token);\n        setAuth0Id(sub);\n        setIsAuthorized(true);\n      }\n    } catch (e) {\n      console.log(\"could not retrieve token\");\n    }\n  };\n\n  const [request, result, promptAsync] = AuthSession.useAuthRequest(\n    {\n      redirectUri: redirectUri,\n      clientId: auth0ClientId,\n      responseType: \"id_token\",\n      scopes: [\"openid\", \"profile\"],\n      extraParams: {\n        nonce: \"NONCE\",\n      },\n      // state: \"STATE\",\n      // usePKCE: false,\n\n    },\n    { authorizationEndpoint }\n  );\n\n  // Retrieve the redirect URL, add this to the callback URL list\n  // of your Auth0 application.\n  // console.log(`Redirect URL: ${redirectUri}`);\n\n  React.useEffect(() => {\n    if (result) {\n      // @ts-expect-error\n      if (result.error) {\n        Alert.alert(\n          \"Authentication error\",\n          // @ts-expect-error\n          // result.params.error_description || \"something went wrong\"\n          request?.state\n        );\n        return;\n      }\n\n      window.alert(result.type)\n\n      if (result.type === \"success\") {\n        // Retrieve the JWT token and decode it\n        const jwtToken = result.params.id_token;\n        storeToken(jwtToken);\n\n        const decoded = jwtDecode(jwtToken);\n        // @ts-expect-error\n        const { nickname, sub } = decoded;\n\n        // console.log(decoded)\n\n        window.alert(result.params.id_token)\n\n        setName(nickname);\n        setToken(jwtToken);\n        setAuth0Id(sub);\n        setIsAuthorized(true);\n      }\n    }\n  }, [result]);\n\n  React.useEffect(() => {\n    getToken()\n  }, [])\n\n  return (\n    <View style={styles.container}>\n      <Auth0Context.Provider value={{ token, name, auth0Id, isAuthorized }}>\n        {isAuthorized ? (\n          children\n        ) : (\n          <View style={styles.buttonContainer}>\n            <Text style={{marginBottom: 50, fontSize: 100}}>🎨</Text>\n            <Button\n              disabled={!request}\n              title=\"Log in\"\n              onPress={() => promptAsync({ useProxy })}\n            />\n          </View>\n        )}\n      </Auth0Context.Provider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n  }\n});\n","import React, { useContext } from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, NormalizedCacheObject } from \"@apollo/client\";\nimport { Auth0Context } from \"./Auth0Provider\";\n\nconst createApolloClient = (\n  token: string,\n  userId: string\n): ApolloClient<NormalizedCacheObject> => {\n  const link = new HttpLink({\n    uri: \"https://sweeping-jay-28.hasura.app/v1/graphql\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      // 'X-Hasura-Role': 'user',\n      // 'X-Hasura-User-Id': userId\n    },\n  });\n  return new ApolloClient({\n    link,\n    cache: new InMemoryCache(),\n  });\n};\n\n\nexport const AuthorizedApolloProvider: React.FC = ({ children }) => {\n  const { token, auth0Id } = useContext(Auth0Context)\n  const client = createApolloClient(token, auth0Id);\n\n  return (\n    <ApolloProvider client={client}>\n      {children}\n    </ApolloProvider>\n  )\n}\n","import React from 'react'\nimport { StyleSheet } from \"react-native\";\nimport { View } from './Themed';\n\nexport const Divider: React.FC = () => <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n\nconst styles = StyleSheet.create({\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  }\n})\n","import * as React from 'react';\nimport { StyleSheet, ActivityIndicator, TextInput, FlatList, Dimensions } from 'react-native';\n\nimport { Text, View, Button } from '../components/Themed';\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport { Auth0Context } from '../providers/Auth0Provider';\nimport { Divider } from '../components/Divider';\n\nconst GET_OPEN_GAMES = gql`\n  query getOpenGames {\n    games(where: {started: {_eq: false}}) {\n      id\n      name\n      players {\n        name\n      }\n    }\n  }\n`;\n\nconst CREATE_NEW_GAME = gql`\n  mutation createGame($name: String!, $userId: String!) {\n    insert_games(objects: {name: $name, host_id: $userId}) {\n      returning {\n        name\n        id\n      }\n    }\n  }\n`;\n\nconst JOIN_GAME = gql`\n  mutation joinGame($game: Int!, $userId: String!) {\n    update_users(where: {auth0_id: {_eq: $userId}}, _set: {game_id: $game}) {\n      returning {\n        game_id\n        id\n      }\n    }\n  }\n`\n\n\nconst GameListItem = ({ game }) => {\n  const { auth0Id } = React.useContext(Auth0Context)\n  const [joinGame] = useMutation(JOIN_GAME, { refetchQueries: ['getOpenGames', 'getMyGame'] })\n\n  return (\n    <View style={styles.gameListItem}>\n      <View>\n        <Text style={styles.title}>{game.name}</Text>\n        <Text>{game.players.map((player) => player.name).join(', ')}</Text>\n      </View>\n      <View>\n        <Button color=\"#BA7CC6\" title=\"meedoen\" onPress={() => {\n          joinGame({ variables: { game: game.id, userId: auth0Id }})\n        }} />\n      </View>\n    </View>\n  )\n}\n\nexport default function LobbyScreen() {\n  const [newGameName, setNewGameName] = React.useState('')\n  const { name, auth0Id } = React.useContext(Auth0Context)\n  const { loading, data } = useQuery(GET_OPEN_GAMES, { pollInterval: 5000 });\n  const [joinGame] = useMutation(JOIN_GAME, { refetchQueries: ['getOpenGames', 'getMyGame'] })\n  const [createGame] = useMutation(\n    CREATE_NEW_GAME,\n    {\n      refetchQueries: ['getOpenGames'],\n      onCompleted: (result) => {\n        // Join the game you created\n        joinGame({ variables: { game: result?.insert_games?.returning[0]?.id, userId: auth0Id }})\n      }\n    }\n  )\n\n  const openGames = data?.games ?? []\n\n  const createNewGame = () => {\n    createGame({ variables: { name: newGameName, userId: auth0Id }})\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Hoi {name}!</Text>\n\n      <Divider />\n\n      <Text style={styles.title}>Kies een spel om aan mee te doen:</Text>\n\n      {loading && <ActivityIndicator />}\n\n      <FlatList\n        style={styles.flatList}\n        data={openGames}\n        renderItem={({item}) => <GameListItem game={item} />}\n        keyExtractor={(item) => item.id.toString()}\n      />\n\n      <Divider />\n\n      <Text style={styles.title}>Of maak een nieuw spel aan:</Text>\n\n      <View style={styles.row}>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Naam voor een nieuw spel\"\n          value={newGameName}\n          onChangeText={setNewGameName}\n        />\n        <Button title=\" + \" onPress={createNewGame} />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 50,\n    paddingHorizontal: 15,\n    height: Dimensions.get(\"window\").height\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  row: {\n    flexDirection: 'row',\n    width: '100%',\n  },\n  gameListItem: {\n    padding: 15,\n    borderWidth: 1,\n    borderColor: 'purple',\n    flex: 1,\n    marginVertical: 5,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  textInput: {\n    padding: 10,\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: 'blue',\n    flex: 1,\n  },\n  flatList: {\n    backgroundColor: '#FFE3EC',\n    width: '100%',\n    borderWidth: 1,\n    borderColor: '#FFE3EC'\n  },\n  playButton: {\n    backgroundColor: '#BA7CC6',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n","import React, { useEffect } from \"react\";\nimport { gql, useQuery, useLazyQuery } from \"@apollo/client\";\nimport { Auth0Context } from \"./Auth0Provider\";\n\nexport interface IGameContext {\n  game?: unknown\n  hosting: boolean\n  myTurn: boolean\n}\n\nexport const GameContext = React.createContext<IGameContext>({\n  game: undefined,\n  hosting: false,\n  myTurn: false\n});\n\nconst GET_MY_GAME = gql`\n  query getMyGame($userId: String!) {\n    users(where: { auth0_id: { _eq: $userId } }) {\n      id\n      game {\n        host_id\n        id\n        name\n        players {\n          name\n          id\n          claimed_names {\n            id\n            game_id\n          }\n        }\n        names(where: { claimed: { _eq: false } }) {\n          name\n          id\n        }\n        started\n        names_frozen\n        active_player {\n          auth0_id\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GameProvider: React.FC = ({ children }) => {\n  const { auth0Id } = React.useContext(Auth0Context)\n  const {data} = useQuery(GET_MY_GAME, { variables: { userId: auth0Id }})\n  const game = data?.users ? data.users[0].game : undefined\n  const hosting = game && game.host_id === auth0Id\n  const myTurn = game && game?.active_player?.auth0_id === auth0Id\n\n  return (\n    <GameContext.Provider value={{ game, hosting, myTurn }}>\n      {children}\n    </GameContext.Provider>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { StyleSheet, TextInput } from 'react-native'\nimport { Text, View, Button } from '../components/Themed';\nimport { GameContext } from '../providers/GameProvider'\nimport { Divider } from '../components/Divider';\nimport { gql, useMutation } from '@apollo/client';\nimport { Alert } from '../components/Alert';\nimport { Auth0Context } from '../providers/Auth0Provider';\n\nconst LEAVE_GAME = gql`\n  mutation leaveGame($userId: String!) {\n    update_users(where: {auth0_id: {_eq: $userId}}, _set: {game_id: null}) {\n      returning {\n        id\n        game_id\n      }\n    }\n  }\n`\n\nconst DESTROY_GAME = gql`\n  mutation destroyGame($game: Int!) {\n    delete_games(where: {id: {_eq: $game}}) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nconst START_GAME = gql`\n  mutation startGame($game: Int!) {\n    update_games(where: {id: {_eq: $game}}, _set: {started: true}) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nconst CREATE_NAME = gql`\n  mutation createName($game: Int!, $name: String!) {\n    insert_names(objects: {game_id: $game, name: $name}) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nconst FREEZE_NAMES = gql`\n  mutation freezeNames($game: Int!) {\n    update_games(where: {id: {_eq: $game}}, _set: {names_frozen: true}) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nconst TAKE_TURN = gql`\n  mutation takeTurn($game: Int!, $userId: String!) {\n    update_games(where: {id: {_eq: $game}}, _set: {active_player_id: $userId}) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nconst RESET_ROUND = gql`\n  mutation resetRound($game: Int!) {\n    update_names(where: {game_id: {_eq: $game}}, _set: {claimed: false}) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nexport const GameScreen: React.FC = () => {\n  const { auth0Id } = useContext(Auth0Context)\n  const { game, hosting } = useContext(GameContext)\n  const [leaveGame] = useMutation(LEAVE_GAME, { refetchQueries: ['getOpenGames', 'getMyGame'] })\n  const [destroyGame] = useMutation(DESTROY_GAME, { refetchQueries: ['getOpenGames', 'getMyGame'] })\n  const [startGame] = useMutation(START_GAME, { refetchQueries: ['getMyGame'] })\n  const [freezeNames] = useMutation(FREEZE_NAMES, { refetchQueries: ['getMyGame'] })\n  const [createName] = useMutation(CREATE_NAME, { refetchQueries: ['getMyGame'] })\n  const [takeTurn] = useMutation(TAKE_TURN, { refetchQueries: ['getMyGame'] })\n  const [resetRound] = useMutation(RESET_ROUND, { refetchQueries: ['getMyGame'] })\n  const [newName, setNewName] = useState('')\n  const [nameContribution, setNameContribution] = useState(0)\n\n  const onLeaveGamePress = () => {\n    Alert.alert(\n      \"Spel verlaten\",\n      \"Weet je zeker dat je het spel wilt verlaten?\",\n      [\n        {\n          text: 'Nee, ik blijf',\n          style: 'cancel'\n        },\n        {\n          text: 'Ja, ik ga',\n          onPress: () => {\n            leaveGame({\n              variables: { userId: auth0Id },\n            })\n          }\n        }\n      ]\n    )\n  }\n\n  const onDestroyGamePress = () => {\n    Alert.alert(\n      \"Spel verwijderen\",\n      \"Weet je zeker dat je het spel wilt verwijderen?\",\n      [\n        {\n          text: 'Nee, toch niet',\n          style: 'cancel'\n        },\n        {\n          text: 'Ja, weg ermee',\n          onPress: () => {\n            destroyGame({\n              variables: { game: game.id },\n            })\n          }\n        }\n      ]\n    )\n  }\n\n  const onStartGamePress = () => {\n    Alert.alert(\n      \"Spel starten\",\n      \"Weet je zeker dat je het spel wilt starten? Er kunnen daarna geen spelers meer bij.\",\n      [\n        {\n          text: 'Nee, nog niet',\n          style: 'cancel'\n        },\n        {\n          text: 'Ja, starten maar!',\n          onPress: () => {\n            startGame({\n              variables: { game: game.id },\n            })\n          }\n        }\n      ]\n    )\n  }\n\n  const onFreezeNamesPress = () => {\n    Alert.alert(\n      \"Hoed sluiten\",\n      \"Weet je zeker dat je de hoed wilt sluiten? Er kunnen daarna geen namen meer bij.\",\n      [\n        {\n          text: 'Nee, nog niet',\n          style: 'cancel'\n        },\n        {\n          text: 'Ja, sluiten maar!',\n          onPress: () => {\n            freezeNames({\n              variables: { game: game.id },\n            })\n          }\n        }\n      ]\n    )\n  }\n\n  const onCreateNamePress = () => {\n    createName({ variables: {game: game.id, name: newName}})\n    setNewName('')\n    setNameContribution((previousContribution) => previousContribution + 1)\n  }\n\n  const onTakeTurnPress = () => {\n    takeTurn({variables: { game: game.id, userId: auth0Id}})\n  }\n\n  const onResetRoundPress = () => {\n    Alert.alert(\n      \"Nieuwe ronde starten\",\n      \"In de nieuwe ronde gaan alle namen weer terug de hoed in. Zorg dat de scores opgeschreven staan.\",\n      [\n        {\n          text: \"Nee, nog niet\",\n          style: \"cancel\",\n        },\n        {\n          text: \"Ja, herstarten maar!\",\n          onPress: () => {\n            resetRound({\n              variables: { game: game.id },\n            });\n          },\n        },\n      ]\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.title}>Spel: {game.name}</Text>\n        {!game.started && <Text>🕰 Het spel is nog niet gestart.</Text>}\n        {game.started && <Text>🚀 Het spel is gestart!</Text>}\n\n        <Divider />\n\n        <Text style={styles.title}>Spelers:</Text>\n        {game.players.map((player) => {\n          const claimedGameNames = player.claimed_names || []\n          const score = claimedGameNames.filter(\n            (claimedName) => claimedName.game_id === game.id\n          ).length;\n          return <Text key={player.id.toString()}>{player.name} ({score} punten)</Text>;\n        })}\n      </View>\n\n      {game.started && (\n        <View>\n          <Text style={styles.nameCountingTitle}>\n            Namen in de 🎩: {game.names.length}.\n          </Text>\n\n          {!game.names_frozen && (\n            <View>\n              <View style={styles.row}>\n                <TextInput\n                  style={styles.textInput}\n                  placeholder=\"Naam voor in de hoed\"\n                  value={newName}\n                  onChangeText={setNewName}\n                />\n                <Button title=\" + \" onPress={onCreateNamePress} />\n              </View>\n              <Text>Jij hebt er {nameContribution} toegevoegd.</Text>\n            </View>\n          )}\n\n          {game.names_frozen && !game.active_player && !!game.names.length && (\n            <Button\n              color=\"#BA7CC6\"\n              title=\"Het is mijn beurt, ik ga presenteren.\"\n              onPress={onTakeTurnPress}\n            />\n          )}\n          {game.names_frozen && !!game.active_player && (\n            <Text style={styles.title}>\n              🕺 {game.active_player.name} is aan het presenteren.\n            </Text>\n          )}\n          {game.names_frozen && !game.names.length && (\n            <Text>\n              De maker van het spel kan een nieuwe ronde starten. Vergeet niet de\n              puntentelling op te schrijven!\n            </Text>\n          )}\n        </View>\n      )}\n\n      <View>\n        {hosting && !game.started && (\n          <Button color=\"#BA7CC6\" title=\"Starten\" onPress={onStartGamePress} />\n        )}\n        {hosting && game.started && !game.names_frozen && (\n          <Button\n            color=\"#BA7CC6\"\n            title=\"Hoed sluiten\"\n            onPress={onFreezeNamesPress}\n          />\n        )}\n        {hosting && game.names_frozen && !game.names.length && (\n          <Button\n            color=\"#BA7CC6\"\n            title=\"Nieuwe ronde starten\"\n            onPress={onResetRoundPress}\n          />\n        )}\n        <Divider />\n        {hosting && (\n          <Button\n            color=\"#d22461\"\n            title=\"Spel verwijderen\"\n            onPress={onDestroyGamePress}\n          />\n        )}\n        {!hosting && !game.started && (\n          <Button\n            color=\"#d22461\"\n            title=\"Spel verlaten\"\n            onPress={onLeaveGamePress}\n          />\n        )}\n      </View>\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-between',\n    paddingHorizontal: 15,\n    paddingVertical: 50,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  row: {\n    flexDirection: 'row',\n    width: '100%',\n    marginBottom: 10,\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  gameListItem: {\n    padding: 15,\n    borderWidth: 1,\n    borderColor: 'purple',\n    flex: 1,\n    marginVertical: 5,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  textInput: {\n    padding: 10,\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: 'blue',\n    flex: 1,\n  },\n  flatList: {\n    flex: 1,\n    backgroundColor: '#FFE3EC',\n    width: '100%'\n  },\n  playButton: {\n    backgroundColor: '#BA7CC6',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  nameCountingTitle: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    marginBottom: 15\n  }\n});\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { StyleSheet, ActivityIndicator } from 'react-native'\nimport { sample } from 'lodash'\nimport { View, Text, Button } from \"../components/Themed\"\nimport { GameContext } from '../providers/GameProvider'\nimport { gql, useMutation } from '@apollo/client'\nimport { Auth0Context } from '../providers/Auth0Provider'\nimport { Alert } from '../components/Alert'\n\nconst END_TURN = gql`\n  mutation takeTurn($game: Int!, $userId: String!) {\n    update_games(\n      where: { id: { _eq: $game } }\n      _set: { active_player_id: null }\n    ) {\n      returning {\n        id\n        names {\n          name\n        }\n      }\n    }\n  }\n`\n\nconst CLAIM_NAME = gql`\n  mutation claimName($name: Int!, $userId: String!) {\n    update_names(where: {id: {_eq: $name}}, _set: {claimed: true, claimer_id: $userId}) {\n      returning {\n        id\n      }\n    }\n}\n`;\n\nexport const TurnScreen = () => {\n  const { game } = useContext(GameContext)\n  const { auth0Id } = useContext(Auth0Context)\n  const [randomAvailableName, setRandomAvailableName] = useState()\n  // const randomAvailableName = sample(game.names)\n  const [endTurn] = useMutation(END_TURN, {\n    variables: { game: game.id, userId: auth0Id },\n    refetchQueries: ['getMyGame']\n  })\n  const [claimName, { loading }] = useMutation(CLAIM_NAME, {\n    variables: { name: randomAvailableName?.id, userId: auth0Id },\n    refetchQueries: [\"getMyGame\"],\n  });\n\n  useEffect(() => {\n    setRandomAvailableName(sample(game.names))\n  }, [game.names])\n\n  const onEndTurnPress = () => {\n    if (!randomAvailableName) { return endTurn() }\n\n    Alert.alert(\n      \"Spel verwijderen\",\n      \"Weet je zeker dat je je beurt wilt afsluiten?\",\n      [\n        {\n          text: 'Nee, nog niet',\n          style: 'cancel'\n        },\n        {\n          text: 'Ja, klaar!',\n          onPress: () => {\n            endTurn()\n          }\n        }\n      ]\n    )\n  }\n\n  const onClaimNamePress = () => {\n\n    claimName()\n  }\n\n  return (\n    <View style={styles.container}>\n      {!!randomAvailableName && (\n        <Button\n          disabled={loading}\n          color=\"#BA7CC6\"\n          title=\"🎉 Geraden!\"\n          onPress={onClaimNamePress}\n        />\n      )}\n\n      <View style={styles.container}>\n        {loading && <ActivityIndicator />}\n        {!!randomAvailableName && !loading && (\n          <Text style={styles.randomName}>{randomAvailableName?.name}</Text>\n        )}\n        {!randomAvailableName && !loading && (\n          <>\n            <Text style={styles.randomName}>👍</Text>\n            <Text style={styles.title}>De namen zijn op! Goed gedaan.</Text>\n          </>\n        )}\n      </View>\n\n      <Button\n        color=\"#d22461\"\n        title=\"Beurt beëindigen\"\n        onPress={onEndTurnPress}\n        disabled={loading}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingVertical: 50,\n    paddingHorizontal: 15,\n  },\n  randomName: {\n    fontSize: 72,\n    fontWeight: \"bold\",\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 15,\n  },\n});\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useContext } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport { Auth0Provider } from './providers/Auth0Provider';\nimport { AuthorizedApolloProvider } from './providers/ApolloProvider';\nimport LobbyScreen from './screens/LobbyScreen';\nimport { GameProvider, GameContext } from './providers/GameProvider';\nimport { GameScreen } from './screens/GameScreen';\nimport { TurnScreen } from './screens/TurnScreen';\nimport { View } from \"./components/Themed\";\n\nconst AppContent: React.FC = () => {\n  const { game, myTurn } = useContext(GameContext)\n\n  if(!!myTurn) return <TurnScreen />\n  if(!!game) return <GameScreen />\n\n  return <LobbyScreen />\n}\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Auth0Provider>\n          <AuthorizedApolloProvider>\n            <GameProvider>\n\n                <AppContent />\n\n            </GameProvider>\n          </AuthorizedApolloProvider>\n        </Auth0Provider>\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/hoedspel/expo-service-worker.js', { scope: '/hoedspel/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}